#include "accents.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer Definitions

#define BASE 0
#define NUME 1
#define SYMB 2
#define FUNC 3
#define GAME 4
#define NAVI 5
#define FGAM 6
#define ACCE 7

// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
    macros {
        close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };

        guileft: guileft {
            compatible = "zmk,behavior-macro";
            label = "GUILEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        guiright: guiright {
            compatible = "zmk,behavior-macro";
            label = "GUIRIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        gui_up: gui_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "GUI_UP";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        funcion {
            bindings = <&mo 4>;
            key-positions = <14 15>;
        };

        game {
            bindings = <&tog 5>;
            key-positions = <11 23 35>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB           &kp Q       &kp W       &kp E        &kp P      &kp T          &kp Y        &kp U                &kp I              &kp Y            &kp P               &kp ESC
&kp LSHFT         &mt LGUI A  &mt LALT R  &mt LCTRL S  &kp LC(F)  &kp G          &kp H        &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt LGUI SEMICOLON  &caps_word
&kp LEFT_CONTROL  &kp Z       &kp X       &kp C        &kp V      &kp B          &kp N        &kp M                &kp COMMA          &kp DOT          &kp FSLH            &kp LA(QMARK)
                                          &kp ESCAPE   &lt 3 DEL  &lt 1 SPACE    &lt 2 ENTER  &lt 5 BSPC           &mt LALT DEL
            >;
        };

        number_layer {
            bindings = <
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp BACKSLASH    &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT  &kp BACKSPACE
&trans  &kp ASTERISK          &kp DOLLAR             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE         &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_COMMA     &kp EQUAL
&trans  &kp K_UNDO            &kp K_CUT              &kp LESS_THAN     &kp GREATER_THAN   &kp UNDER        &kp KP_COMMA     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &mt RIGHT_CONTROL ENTER
                                                     &trans            &trans             &trans           &trans           &trans           &kp KP_NUMBER_0
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO    &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp CAPSLOCK  &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans    &kp INS       &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                            &trans     &trans     &trans    &kp ENTER     &kp BSPC   &kp DEL
            >;
        };

        accent_layer {
            bindings = <
&trans  &none      &none    &kp HASH  &kp CARET  &none        &none      &ac_otil  &ac_oacu  &ac_uacu  &none     &trans
&trans  &kp GRAVE  &kp DQT  &kp SQT   &kp Z      &kp TILDE    &ac_agrv   &ac_atil  &ac_aacu  &ac_eacu  &ac_iacu  &trans
&trans  &none      &none    &ac_ccdi  &none      &none        &none      &ac_acir  &ac_ocir  &ac_ecir  &none     &trans
                            &trans    &trans     &trans       &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E       &kp R    &kp T        &kp C_VOL_UP       &trans     &trans     &trans    &trans    &trans
&kp LEFT_SHIFT    &kp A  &kp S  &kp D       &kp F    &kp G        &kp C_VOLUME_DOWN  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C       &kp V    &kp B        &trans             &trans     &trans     &kp RALT  &trans    &tog 5
                                &kp ESCAPE  &lt 7 P  &kp MINUS    &trans             &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS          &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE          &trans  &trans     &trans     &kp RALT  &trans    &trans
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE    &trans  &trans     &trans
            >;
        };

        fgame_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PSCRN          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SLCK           &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK    &trans  &trans     &trans     &kp RALT  &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB            &trans  &trans     &trans
            >;
        };
    };
};
