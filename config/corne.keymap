#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "accents.dtsi"

// Layer Definitions

#define BASE 0
#define NUME 1
#define SYMB 2
#define FUNC 3
#define GAME 4
#define NAVI 5
#define FGAM 6
#define ACCE 7

// Behavior configuration
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&sk {
    release-after-ms = <500>;
    quick-release;
};




 combos {
        compatible = "zmk,combos";

        // combo_esc {
        //timeout-ms = <50>;
        //key-positions = <13 16>;
        //  bindings = <&caps_word>;
        //  };

        game {
            timeout-ms = <50>;
            bindings = <&tog 4>;
            key-positions = <34 13 12>;
            layers = <0>;
        };

        close {
            timeout-ms = <50>;
            bindings = <&close>;
            key-positions = <0 1 2 3>;
            layers = <0>;
        };

        prtsc_combo {
            timeout-ms = <50>;
            bindings = <&kp PRINTSCREEN>;
            key-positions = <5 4>;
            layers = <0>;
        };

        caps {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <22 23 24>;
            layers = <0>;
        };

        esc {
            timeout-ms = <50>;
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
            layers = <0>;
        };

        del {
            timeout-ms = <50>;
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        quest {
            bindings = <&kp QMARK>;
            key-positions = <29 28 27>;
            layers = <0>;
        };

        lgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <10 11>;
            layers = <0>;
        };

        rgui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <19 18>;
            layers = <0>;
        };

        lock {
            bindings = <&lock>;
            key-positions = <6 7 8>;
            layers = <5>;
        };
    };

    macros {
        close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };

        guileft: guileft {
            compatible = "zmk,behavior-macro";
            label = "GUILEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        guiright: guiright {
            compatible = "zmk,behavior-macro";
            label = "GUIRIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        gui_up: gui_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "GUI_UP";
        };
    };

/ {
    keymap {
        compatible = "zmk,keymap";



        base_layer {

            bindings = <
&kp  TAB      &kp Q       &kp W       &kp F          &kp P          &kp B                &kp J          &kp L         &kp U          &kp Y         &kp SQT     &trans
&mt LSHFT F  &mt LGUI A  &mt LALT R  &mt LCTRL S    &mt LSHFT T    &kp G                &kp M          &mt LSHFT N   &mt LCTRL E    &mt LALT I    &mt LGUI O  &ac_ccdi
&trans      &kp Z       &mt RALT X  &kp C          &kp D          &kp V                &kp K          &kp H         &kp CMMA       &mt RALT DOT  &kp FSLH    &trans
                                    &lt MEDIA ESC  &lt NAV SPACE  &lt MOUSE TAB        &lt SYM ENTER  &lt NUM BSPC  &lt FN DEL
            >;
        };

       

       number_layer {
            bindings = <
&kp TAB      &kp Q  &kp W  &kp K    &kp S      &kp F          &kp O      &kp I     &kp L     &kp SEMI  &kp R     &trans
&mt LSHFT F &kp A  &kp D  &kp V    &kp E      &kp G          &kp M      &kp Y     &kp N     &kp U     &kp SQT   &trans
&KP       &kp Z  &kp X  &kp C    &kp B      &kp T          &kp J      &kp H     &kp CMMA  &kp DOT   &kp FSLH  &trans
                      &kp ESC  &kp SPACE  &kp TAB        &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &kp K_REDO    &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &kp CAPSLOCK  &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &kp INS       &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                            &trans     &trans     &trans        &kp ENTER     &kp BSPC   &kp DEL
            >;
        };

accent_layer {
            bindings = <
&trans  &none   &none  &kp X   &kp CARET     &none              &none     &ac_otil    &ac_oacu    &ac_uacu     &none     &trans
&trans  &kp GRAVE  &kp DQT   &kp SQT    &kp Z     &kp TILDE     &ac_agrv  &ac_atil    &ac_aacu    &ac_eacu     &ac_iacu  &trans
&trans  &none    &none    &ac_ccdi      &none     &none         &none      &ac_acir   &ac_ocir    &ac_ecir     &none     &trans
                            &trans     &trans     &trans        &kp ENTER     &kp BSPC   &kp DEL
            >;
        };



        function_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &cp C_VOL_UP  &ext_power EP_OFF  &cp C_BRI_DN  &cp C_BRI_UP  &ext_power EP_ON  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &cp C_VOL_DN   &cp C_PREV         &cp C_VOL_DN  &cp C_VOL_UP  &cp C_NEXT        &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &out OUT_BLE  &bt BT_SEL 0       &bt BT_PRV    &bt BT_NXT    &bt BT_CLR        &trans
                            &trans     &trans     &trans        &cp C_STOP    &cp C_PLAY         &cp C_MUTE
            >;
        };

        game_layer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SQT    &kp N4  &kp N5   &kp N6  &kp EQUAL        &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH         &trans  &trans     &trans     &kp RALT  &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS        &trans  &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS              &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE              &trans  &trans     &trans     &kp RALT  &trans    &trans
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE        &trans  &trans     &trans
            >;
        };

        fgame_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PSCRN              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SLCK               &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK        &trans  &trans     &trans     &kp RALT  &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB                &trans  &trans     &trans
            >;
        };
    };
};
