#include "accents.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer Definitions

#define BASE 0
#define NUME 1
#define SYMB 2
#define FUNC 3
#define GAME 4
#define NAVI 5
#define FGAM 6
#define ACCE 7

// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
    macros {
        close: close {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LALT>;
        };

        guileft: guileft {
            compatible = "zmk,behavior-macro";
            label = "GUILEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        guiright: guiright {
            compatible = "zmk,behavior-macro";
            label = "GUIRIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        gui_up: gui_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "GUI_UP";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        funcion {
            bindings = <&mo 4>;
            key-positions = <15 16>;
            layers = <0>;
        };

        game {
            bindings = <&tog 5>;
            key-positions = <11 23 35>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp TAB  &kp Q  &kp W      &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P    &kp BSPC
  &kp ESC  &kp A  &kp S      &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI    &kp APOS
  &kp LSHFT  &kp Z  &kp X      &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                         &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        number_layer {
            bindings = <
 &trans    &trans    &kp UP     &trans     &trans     &trans     &kp N7     &kp N8    &kp N9   &kp N0  &kp HOME   &kp F1
 &trans  &kp LEFT  &kp DOWN  &kp RIGHT     &trans     &trans     &kp N4     &kp N5    &kp N6   &trans    &trans  &kp F10
 &kp LEFT_ALT    &trans    &trans     &trans  &kp MINUS   &kp PLUS     &kp N1     &kp N2    &kp N3  &kp DOT    &trans  &kp F20
                                   &kp LGUI     &trans  &kp SPACE    &kp RET  &kp RCTRL  &kp RALT
            >;
        };

        symbol_layer {
            bindings = <
&trans      &kp EXCL      &kp AT    &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp DEL
&trans    &bt BT_CLR  &bt BT_PRV  &bt BT_NXT        &trans      &to 3    &kp UNDER  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_TOG      &trans      &trans        &trans     &trans    &kp MINUS   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI  &kp LEFT_ALT  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };

        accent_layer {
            bindings = <
&trans  &none      &none    &kp HASH  &kp CARET  &none        &none      &ac_otil  &ac_oacu  &ac_uacu  &none     &trans
&trans  &kp GRAVE  &kp DQT  &kp SQT   &kp Z      &kp TILDE    &ac_agrv   &ac_atil  &ac_aacu  &ac_eacu  &ac_iacu  &trans
&trans  &none      &none    &ac_ccdi  &none      &none        &none      &ac_acir  &ac_ocir  &ac_ecir  &none     &trans
                            &trans    &trans     &trans       &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&trans  &trans  &trans  &trans        &trans  &trans    &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans        &trans   &sl 4    &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans        &trans  &trans    &trans         &trans  &trans  &trans  &trans   &to 0
                        &trans  &kp LEFT_ALT  &trans    &trans  &kp RIGHT_WIN  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC          &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS          &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE          &trans  &trans     &trans     &kp RALT  &trans    &trans
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE    &trans  &trans     &trans
            >;
        };

        fgame_layer {
            bindings = <
 &kt F5  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
  &to 3         &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans       &kp LA(F4)
&kp F10         &none         &to 0         &none  &kp NUMBER_6  &kp NUMBER_7           &trans         &trans         &trans         &trans         &trans            &to 0
                                            &kp J         &kp I         &kp M           &trans         &trans         &trans
            >;
        };
    };
};
